name: CI

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master

jobs:
  fmt:
    name: Format Check
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Setup Zig
      uses: mlugg/setup-zig@v1
      with:
        version: 0.14.0
        use-cache: false

    - name: Run fmt
      run: zig fmt --check **/*.zig

  prep:
    name: Prepare
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Zig
        uses: mlugg/setup-zig@v1
        with:
          version: 0.14.0
          use-cache: false

      - name: Get Zune Version
        id: version
        run: |
          version=$(zig build version)
          echo "version=$version">> $GITHUB_OUTPUT

  test:
    needs: [fmt, prep]
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            name: Linux x86_64
            target: x86_64-linux-gnu
            artifact: zune-${{ needs.prep.outputs.version }}-linux-x86_64
          - os: windows-latest
            name: Windows x86_64
            target: x86_64-windows
            artifact: zune-${{ needs.prep.outputs.version }}-windows-x86_64
            ext: .exe
          - os: macos-13
            name: macOs x86_64
            target: x86_64-macos
            artifact: zune-${{ needs.prep.outputs.version }}-macos-x86_64
          - os: macos-14
            name: macOs Arm64
            target: aarch64-macos
            artifact: zune-${{ needs.prep.outputs.version }}-macos-aarch64
          - os: ubuntu-22.04-arm
            name: Linux Arm64
            target: aarch64-linux
            artifact: zune-${{ needs.prep.outputs.version }}-linux-aarch64
          - os: ubuntu-latest
            name: Linux Risc-v64
            target: riscv64-linux
            qemu-platform: riscv64
            artifact: zune-${{ needs.prep.outputs.version }}-linux-riscv64

    name: ${{ matrix.name }}
    timeout-minutes: 20
    runs-on: ${{matrix.os}}
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Setup Zig
      uses: mlugg/setup-zig@v1
      with:
        version: 0.14.0
        use-cache: false

    - name: Setup QEMU
      if: matrix.qemu-platform != ''
      uses: docker/setup-qemu-action@v1

    - name: Run tests
      continue-on-error: ${{ matrix.qemu-platform != '' }}
      run: zig build test -Dtarget=${{ matrix.target }}${{ matrix.qemu-platform != '' && ' -fqemu' || '' }} --verbose
   
    - name: Build debug
      run: zig build -Dtarget=${{ matrix.target }} --verbose

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact }}
        path: |
          ./zig-out/bin/zune${{ matrix.ext }}
